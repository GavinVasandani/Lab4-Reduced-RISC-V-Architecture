$version Generated by VerilatedVcd $end
$date Mon Nov 21 13:44:48 2022 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 32 % ImmOp [31:0] $end
  $var wire  1 & PCsrc $end
  $var wire  1 ' clk $end
  $var wire 32 ) instr [31:0] $end
  $var wire  1 ( rst $end
  $scope module PC_top $end
   $var wire 32 . ADDRESS_WIDTH [31:0] $end
   $var wire 32 . DATA_WIDTH [31:0] $end
   $var wire 32 % ImmOp [31:0] $end
   $var wire 32 * PC [31:0] $end
   $var wire  1 & PCsrc $end
   $var wire  1 ' clk $end
   $var wire 32 ) instr [31:0] $end
   $var wire  1 ( rst $end
   $scope module myPCreg $end
    $var wire 32 . ADDRESS_WIDTH [31:0] $end
    $var wire 32 % ImmOp [31:0] $end
    $var wire 32 * PC [31:0] $end
    $var wire  1 & PCsrc $end
    $var wire 32 + branch_PC [31:0] $end
    $var wire  1 ' clk $end
    $var wire 32 , inc_PC [31:0] $end
    $var wire 32 - next_PC [31:0] $end
    $var wire  1 ( rst $end
   $upscope $end
   $scope module myRom $end
    $var wire 32 . ADDRESS_WIDTH [31:0] $end
    $var wire 32 . DATA_WIDTH [31:0] $end
    $var wire 32 * PC [31:0] $end
    $var wire 32 ) instr [31:0] $end
    $var wire 32 # rom_array[-1] [31:0] $end
    $var wire 32 $ rom_array[0] [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
1&
1'
1(
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000100 ,
b00000000000000000000000000000000 -
b00000000000000000000000000100000 .
